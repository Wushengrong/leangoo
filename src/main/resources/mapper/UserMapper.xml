<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.team6.leangoo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.team6.leangoo.model.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_account" property="userAccount" jdbcType="VARCHAR"/>
        <result column="user_password" property="userPassword" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" jdbcType="INTEGER"/>
        <result column="user_intro" property="userIntro" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="userMap" type="com.team6.leangoo.model.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_account" property="userAccount" jdbcType="VARCHAR"/>
        <result column="user_password" property="userPassword" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" jdbcType="INTEGER"/>
        <result column="user_intro" property="userIntro" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
        <collection property="roles" ofType="com.team6.leangoo.model.Role">
            <id column="role_id" property="roleId" jdbcType="INTEGER"/>
            <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
            <result column="role_level" property="roleLevel" jdbcType="VARCHAR"/>
            <collection property="permissions" ofType="com.team6.leangoo.model.Permission">
                <id column="permission_id" property="permissionId" jdbcType="INTEGER"/>
                <result column="permission_name" property="permissionName" jdbcType="VARCHAR"/>
                <result column="permission_url" property="permissionUrl" jdbcType="VARCHAR"/>
                <result column="permission_method" property="permissionMethod" jdbcType="VARCHAR"/>
            </collection>
        </collection>
    </resultMap>
    <resultMap id="personalResult" type="com.team6.leangoo.model.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_account" property="userAccount" jdbcType="VARCHAR"/>
        <collection property="personalBoardList" ofType="com.team6.leangoo.model.Board">
            <id column="board_id" property="boardId" jdbcType="INTEGER"/>
            <result column="board_name" property="boardName" jdbcType="VARCHAR"/>
            <result column="board_start_date" property="boardStartDate" jdbcType="DATE"/>
            <result column="board_end_date" property="boardEndDate" jdbcType="DATE"/>
            <result column="board_start" property="boardStart" jdbcType="INTEGER"/>
            <result column="board_locate" property="boardLocate" jdbcType="INTEGER"/>
            <result column="board_is_archive" property="boardIsArchive" jdbcType="INTEGER"/>
        </collection>
    </resultMap>
    <select id="findByUserName" parameterType="string" resultMap="userMap">
        SELECT
            `user`.user_id,
            `user`.user_account,
            `user`.user_password,
            `user`.user_email,
            `user`.user_sex,
            `user`.user_intro,
            `user`.user_avatar,
            role.role_id,
            role.role_name,
            role.role_level,
            permission.permission_id,
            permission.permission_name,
            permission.permission_url,
            permission.permission_method
        FROM
            `user`
            INNER JOIN user_role ON user_role.user_id = `user`.user_id
            INNER JOIN role ON user_role.role_id = role.role_id
            INNER JOIN role_permission ON role_permission.role_id = role.role_id
            INNER JOIN permission ON role_permission.permission_id = permission.permission_id
        WHERE user_account = #{username}
    </select>
    <select id="selectPersonalBoardList" resultMap="personalResult">
        SELECT
            user.user_id,
            user.user_account,
            board.board_id,
            board.board_name,
            board.board_start_date,
            board.board_end_date,
            board.board_locate,
            board.board_is_archive,
            board.board_start
        FROM
           board
        LEFT JOIN project_board ON board.board_id=project_board.board_id
        LEFT JOIN project ON project_board.project_id=project.project_id
        LEFT JOIN project_user ON project.project_id=project_user.project_id
        LEFT JOIN user ON project_user.user_id=user.user_id
        WHERE user.user_id=#{userId} AND project_user.is_personal=1 AND board_is_archive=0
        AND project_is_archive=0 ORDER BY board_locate
    </select>
</mapper>